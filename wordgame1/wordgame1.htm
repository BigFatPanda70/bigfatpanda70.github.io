<!DOCTYPE html>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!--
	Title	:	5 letter word game
	
	Info	:	Version 0.0	18th January 2022
	
	Author	:	Nick Fleming
	
	Updated	:	21st January 2022
	
	 Notes:
	---------

		
	 20th January 2022
	-------------------
		Added HUGE 5 word dictionary.. removing all the swear words
	and any obscure words.. ouzel anyone ???

	 21st January 2022
	--------------------
		Uploading to git website for testing.
		
	input needs to not be case sensitive.
-->

<html>
<head>
<title>word game 1</title>

<style>
	
.header
{
	text-align:center;
	margin:auto;
	background-color:cyan;
	max-height:3em;
}
	
.footer
{
	text-align:center;
	margin:auto;
/*	background-color:yellow; */
	max-height:20%;
	font-size:1em;
}

.tabcontainer
{
	display:table;
	background-color:white;
	margin:auto;
	height:50vh;
	font-size:8vh;				/* overall font size to use */
}

.tabrow
{
	background-color:white;
	height:8vh;				/* required to keep row size stable */
	margin-bottom:4px;
}

.tabcell
{
	display:inline-flex;
	align-items:center;
	justify-content:center;
	background-color:white;
	width: 8vh;
	height:8vh;
	margin:2px;
	border: 1px solid black;
}

.inputclass
{
	font-size:3em;
	text-align:center;
	width:5em;
}

.buttclass
{
	font-size:3em;
	text-align:center;
}

@keyframes animwhite
{
	0% {}
	50% {height : 0px; background-color:pink; font-size:0px;}
	100% { background-color:white; color:black; }
}

@keyframes animgrey
{
	0% {}
	50% {height : 0px; background-color:pink; font-size:0px;}
	100% {background-color:grey; color:white; }
}

/*<!-- 	50% {width:64px; height : 0px; margin-top: 30px; margin-bottom:30px; background-color:pink; font-size:0px;} -->*/

@keyframes animgreen
{
	0% {}
	50% {height : 0px; background-color:pink; font-size:0px;}
	100% {background-color:#efd; color: black; }
}

@keyframes animorange
{
	0% {}
	50% {height : 0px; background-color:pink; font-size:0px;}
	100% { background-color:#fda ; color: black;}
}


@keyframes bounce
{
	0% { transform: translateY(0px); background-color:#efd; color:red;}
	25% {transform: translateY(-10px); background-color:#efd; color:yellow;}
	50% {transform: translateY(0px); background-color:#efd; color:green;}
	75% {transform: translateY(-10px); background-color:#efd; color:blue;}
	100% {transform: translateY(0px); background-color:#efd; color:black;}
}

@keyframes wiggle
{
	0% { transform: rotate(0deg);}
	30% {transform: rotate(-10deg);}
	60% {transform: rotate(10deg);}
	100% {transform: rotate(0deg);}
}

@keyframes blam
{
	0% {font-size:0px; transform: translateY(-2.5vh); color:white;}
	25% {color:grey}
	100% {color:black;}
}

</style>

<script src="word_lists.js"></script>

<script>
	
var INPUT_ID = "myinput";



var LETTER_INK_GREY = 0;
var LETTER_INK_GREEN = 1;
var LETTER_INK_ORANGE = 2;

var INFINITY = true;			// game plays until you find the answer

var SolutionWord = "";
var GameBoardRow = 0;
var WordToTry = "";
var TryList = [];

function ClearAnimation (row, col)
{
	var item_id;
	var item;

	item_id = "r" + row + "c" + col;
	item = document.getElementById (item_id);

	item.style.animation= null;
}

function FlipCell (row,col,anim_time,delay,anim_name)
{
	var item_id;
	var item;

	item_id = "r" + row + "c" + col;
	item = document.getElementById (item_id);

	item.style.animation= "" + anim_name + " " + anim_time + "s linear forwards " + delay + "s";	// + " content x";
}

function SelectWord()
{
	var i;
	var idx;
	var word_list;
	
	idx = Math.floor (Math.random() * FiveLetterWordsGroupList.length);
	word_list = FiveLetterWordsGroupList [idx];
	
	i = Math.floor (Math.random() * word_list.length);

	SolutionWord = word_list [i];
	

	// *** TEST VALUE ***
	SolutionWord = "otter";
	
	console.log ("word:" + SolutionWord);
	
}

function SetFirstLetter (row, col, letter_index)
{
	var ch;
	var item_id;
	var item;

	FlipCell (row,col, 
					0.5,				// animation time
					0,					// animation start delay
					"blam"
	);

	ch = SolutionWord.charAt (letter_index);

	item_id = "r" + row + "c" + col;
	item = document.getElementById (item_id);
	item.innerHTML = ch;
}

function SetLetter (row, col, ch, anim_time, anim_delay, anim_name)
{
	var ch;
	var item_id;
	var item;


	item_id = "r" + row + "c" + col;
	item = document.getElementById (item_id);
	item.innerHTML = ch;
	item.style.color="white";

	FlipCell (row,col, anim_time, anim_delay, anim_name );
}

function ResetRows()
{
	var row;
	var col;
	var item_id;
	var item;
	
	for (row = 0; row < 6; row++)
	{
		for (col = 0; col < 5; col++)
		{
			item_id = "r" + row + "c" + col;
			item = document.getElementById (item_id);
			item.innerHTML = "&nbsp";
			item.style.color="white";
			item.style.backgroundColor="white";
			item.style.animation= null;
		}
	}
	
	item = document.getElementById (INPUT_ID);
	item.value = "";
}

function GameReset()
{
	ResetRows();
	SolutionWord = "";
	GameBoardRow = 0;
	SelectWord();
	SetFirstLetter (0,0, 0);
	
	TryList = [];

	document.getElementById(INPUT_ID).focus();
}

function DoWinAnimation()
{
	var i;
	var delay;
	var t;
	var ch;
	
	t = 1;
	delay = 0.0;
	for (i = 0; i < SolutionWord.length; i++)
	{
		ch = SolutionWord.charAt(i).toUpperCase();
//		console.log ("ch:" + ch);
		SetLetter (GameBoardRow, i, ch, t, delay , "bounce");
		delay += 0.1;
	}
}

function CalculateInk (word, solution_word, ch_index)
{
	var ch_sol;
	var ch_try;
	var idx;
	var tmpword;
	var tmpsol;
	
	ch_sol = solution_word.charAt (ch_index);
	ch_try = word.charAt (ch_index).toLowerCase();
	
	if (ch_sol == ch_try)
	{
		return LETTER_INK_GREEN;
	}

	idx = SolutionWord.indexOf (ch_try);
	if (idx == -1)
	{
		return LETTER_INK_GREY;
	}
	
		// orange letter are more complicated.
		// need to ignore any characters that are already in place when
		// doing the orange test.

	tmpword = "";
	tmpsol = "";
	for (i = 0; i < word.length; i++)
	{
		ch_sol = solution_word.charAt(i);
		ch_try = word.charAt(i).toLowerCase();
		if (ch_sol == ch_try)
		{
			ch_sol = "*";
			ch_try = "*";
		}
		tmpsol = tmpsol + ch_sol;
		tmpword = tmpword + ch_try;
	}

	ch_try = word.charAt (ch_index).toLowerCase();

		// if, after discarding all matching letters there are
		// no matching letters, return grey.

	idx = tmpsol.indexOf (ch_try);
	if (idx == -1)
	{
		return LETTER_INK_GREY;
	}

		// if there is an earlier occurance of ch_try in the word
		//  we ignore this one (to prevent duplicates).
	idx = tmpword.indexOf (ch_try);
	if (idx < ch_index)
	{
		return LETTER_INK_GREY;
	}

	return LETTER_INK_ORANGE;

}


function DoResultAnimation()
{
	var ch_try;
	var ch;
	var i;
	var idx;
	var lp;
	var anim_name;
	var anim_time;
	var anim_delay;
	
	var ink;

	anim_delay = 0;
	anim_time = 0.5;
	for (i = 0; i < WordToTry.length; i++)
	{
		ink = CalculateInk (WordToTry, SolutionWord, i);
		switch (ink)
		{
			case LETTER_INK_GREY:	anim_name = "animgrey"; break;
			case LETTER_INK_GREEN:	anim_name = "animgreen"; break;
			case LETTER_INK_ORANGE:	anim_name = "animorange"; break;
			default:
				console.log ("no idea");
				anim_name = "";
				break;
		}

		ch_try = WordToTry.charAt (i);
//		ch = SolutionWord.charAt (i);

//		anim_name = "animgrey";
	
//		idx = SolutionWord.indexOf (ch_try.toLowerCase());
//		if (idx != -1)
//		{
//			anim_name = "animorange";
//		}

//		if (ch_try.toLowerCase() == ch)	{	anim_name = "animgreen";	}

		SetLetter (GameBoardRow, i, ch_try, anim_time, anim_delay , anim_name);
		anim_delay += 0.1;
	}
}

var AnimFrameCount = 0;
function ResultAnimation()
{

	AnimFrameCount++;
	if (AnimFrameCount < 50)
	{
		requestAnimationFrame (ResultAnimation);
		return;
	}
	if (AnimFrameCount == 50)
	{
		DoResultAnimation();
		requestAnimationFrame (ResultAnimation);
		return;
	}
	if ( WordToTry.toLowerCase() != SolutionWord)
	{
		if (GameBoardRow == 5)
		{
			console.log ("GAME OVER");
			return;
		}
		GameBoardRow++;
		return;
	}
	if (AnimFrameCount < 150)
	{
		requestAnimationFrame (ResultAnimation);
		return;
	}
	if (AnimFrameCount == 150)
	{
		DoWinAnimation();
		requestAnimationFrame (ResultAnimation);
		return;
	}
	if (AnimFrameCount < 250)
	{
		requestAnimationFrame (ResultAnimation);
		return;
	}
	alert ("We have a winner. !!");
	GameReset();
}

function IsWordInDictionary (word)
{
		// returns true if the word is in the dictionary,
		// otherwise returns false;
	
	var i;
	var word_list;
	var tmp;
	var idx;
	
	tmp = word.toLowerCase();

		// check to see if its a word.
	for (i = 0; i < tmp.length; i++)
	{
		idx = tmp.charCodeAt(i) - "a".charCodeAt(0);
		if ((idx < 0) || (idx >= 26))
		{
			console.log ("not a cake");
			return false;		// not a letter.
		}
	}
	
	idx = word.toLowerCase().charCodeAt(0) - "a".charCodeAt(0);
	
//	console.log ("idx:" + idx);
	word_list = FiveLetterWordsGroupList [idx];
	
	for (i = 0; i < word_list.length; i++)
	{
		if (word_list[i] == tmp)
		{
			return true;
		}
	}
	return false;
}

function MoveUp()
{
	var i;
	var item_id;
	var item;
	var row;
	var col;
	var ink;
	
	if (INFINITY == false)
	{
		return;
	}

	if (GameBoardRow < 5)
	{
		return;
	}
	
	if (TryList.length < 6)
	{
		return;
	}

	console.log ("before : " + TryList.length);
	console.log (TryList);
//	return;

	for (row = 1; row < 6; row++)
	{
		TryList [row-1] = TryList [row];
	}
	console.log (TryList);
	
	for (row = 0; row < 5; row++)
	{
		for (col = 0; col < 5; col++)
		{
			item_id = "r" + row + "c" + col;
			item = document.getElementById (item_id);
//			console.log ("Row:" + row);
			item.innerHTML = TryList[row].charAt(col);
			item.style.animation= null;

			ink = CalculateInk (TryList[row], SolutionWord, col);
			switch (ink)
			{
				case LETTER_INK_GREY:	
						item.style.color="white";
						item.style.backgroundColor="grey";
						break;
				case LETTER_INK_GREEN:
						item.style.color="black";
						item.style.backgroundColor="#efd";
						break;
				case LETTER_INK_ORANGE:
						item.style.color="black";
						item.style.backgroundColor="#fda";
						break;
			}
		}
	}
}


function TryWord (word_to_try)
{
	var ch_try;
	var anim_name;
	var anim_time;
	var anim_delay;
	var r;

	if (word_to_try.length != 5)
	{
		console.log ("word must be 5 letters long");
		return;
	}
	
	r = IsWordInDictionary (word_to_try);
	if (r == false)
	{
		alert ("not a word in the dictionary please try again");
		return;
	}
	
	MoveUp();
	
	TryList [GameBoardRow] = word_to_try;
	
	WordToTry = word_to_try;

	anim_delay = 0;
	anim_time = 0.5;
	for (i = 0; i < word_to_try.length; i++)
	{
		ch_try = word_to_try.charAt (i);
		anim_name = "blam";
		SetLetter (GameBoardRow, i, ch_try, anim_time, anim_delay, "blam" );
		anim_delay += 0.1;
	}
	
	AnimFrameCount = 0;
	requestAnimationFrame (ResultAnimation);

	
	document.getElementById(INPUT_ID).focus();
}

function start()
{
	var row;
	var col;
	var delay;
	
	GameReset();
}


function ouch()
{
	var item;
	var word_to_try;
	
	if (GameBoardRow > 5)
	{
		return;
	}
	
	item = document.getElementById (INPUT_ID);

	word_to_try = item.value;


	// *** TEST VALUE ***
	word_to_try = "tints";

	TryWord (word_to_try);
	
}

</script>
</head>
<body onload="start()">
	<div class="header">
		<h1>Title goes here.</h1>
	</div>
	
	<div class="tabcontainer">
		<div class="tabrow">
			<div id="r0c0" class="tabcell">A</div><div id="r0c1" class="tabcell">B</div><div id="r0c2" class="tabcell">C</div><div id="r0c3" class="tabcell">D</div><div id="r0c4" class="tabcell">E</div>
		</div>

		<div class="tabrow">
			<div id="r1c0" class="tabcell">F</div><div id="r1c1" class="tabcell">G</div><div id="r1c2" class="tabcell">H</div><div id="r1c3" class="tabcell">I</div><div id="r1c4" class="tabcell">J</div>
		</div>

		<div class="tabrow">
			<div id="r2c0" class="tabcell">K</div><div id="r2c1" class="tabcell">L</div><div id="r2c2" class="tabcell">M</div><div id="r2c3" class="tabcell">N</div><div id="r2c4" class="tabcell">O</div>
		</div>

		<div class="tabrow">
			<div id="r3c0" class="tabcell">P</div><div id="r3c1" class="tabcell">Q</div><div id="r3c2" class="tabcell">R</div><div id="r3c3" class="tabcell">S</div><div id="r3c4" class="tabcell">T</div>
		</div>

		<div class="tabrow">
			<div id="r4c0" class="tabcell">U</div><div id="r4c1" class="tabcell">V</div><div id="r4c2" class="tabcell">W</div><div id="r4c3" class="tabcell">X</div><div id="r4c4" class="tabcell">Y</div>
		</div>

		<div class="tabrow">
			<div id="r5c0" class="tabcell">1</div><div id="r5c1" class="tabcell">2</div><div id="r5c2" class="tabcell">3</div><div id="r5c3" class="tabcell">4</div><div id="r5c4" class="tabcell">5</div>
		</div>

	</div>
	<br>

	<div class="footer">
		<input class="inputclass" id="myinput" type="text" name="guessword" maxlength="5">
		<button class="buttclass" onclick="ouch();">OK</button>
	</div>

</div>
</body>
</html>
